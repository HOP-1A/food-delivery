// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String   @id @default(uuid())
  firstname    String
  lastname     String
  orderAddress String
  phoneNumber  Int      @unique
  email        String
  password     String
  updatedAt    DateTime @updatedAt
  createdAt    DateTime @default(now())
  orderId      String
  Order        Order[]
}

model Products {
  id           String     @id @default(uuid())
  price        Int
  name         String
  description  String
  imgUrl       String
  category     Category?  @relation(fields: [categoryId], references: [id])
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
  usersId      String
  categoryId   String
  orderItems   OrderItems? @relation(fields: [orderItemsId], references: [id])
  orderItemsId String
}

model Category {
  id           String     @id @default(uuid())
  categoryName String
  categoryImg  String
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
  products     Products[]
}

model Order {
  id           String      @id @default(uuid())
  orderItems   OrderItems[]
  user         Users       @relation(fields: [usersId], references: [id])
  orderAddress String
  currentState String
  usersId      String
  updatedAt    DateTime    @updatedAt
  createdAt    DateTime    @default(now())
}

model OrderItems {
  id         String     @id @default(uuid())
  orderId    String     @unique
  order      Order      @relation(fields: [orderId], references: [id])
  productsId String
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
  Products   Products[]
}
